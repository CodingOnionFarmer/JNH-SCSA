# 풀이 아이디어

# 문제 그림에 있는 5개짜리 예시를 보자.
# 처음부터 어떻게 할 지 생각하기보단, 맨 밑에 있는 5번 원판을 기준으로 생각한다.
# 5번 원판은 작업 도중의 어느 순간엔가 꺼내져서 3번 장대로 옮겨져야 한다.
# 우선, 5번 원판을 꺼내려면 1,2,3,4번 원판이 모두 치워져야 한다.
# 그리고, 꺼내서 3번 장대로 옮기려면 3번 장대에 1,2,3,4번 원판이 하나도 없어야 한다.
# 즉, 5번 원판을 1->3번 장대로 옮길 때는 반드시 2번 장대에 1,2,3,4번 원판이 모두 있어야 한다.
# 또한, 옮기고 나서는 다시 2번 장대에 있는 1,2,3,4번 원판을 3번 장대로 옮겨야 한다.

# 즉, 옮기는 과정은 3단계로 이루어진다.
# 1. 1~4번 원판들을 1번장대->2번장대로 옮기기
# 2. 5번 원판을 1번->3번으로 옮기기
# 3. 1~4번 원판들을 2번->3번으로 옮기기

# 몇 번 장대에서 몇 번 장대로 옮기든 번호는 중요하지 않으므로(번호만 달라지고 구조는 같으므로), 재귀 구조는 완성되었다.
# n개의 원판을 a번 장대에서 b번 장대로 옮기는 과정을 hanoi(n,a,b)라고 하면,
# hanoi(n,1,3) = hanoi(n-1,1,2) + hanoi(1,1,3) + hanoi(n-1,2,3)이 된다.

# ---------------------------


def hanoi(n, a, b):  # n개의 원판을 a번 장대에서 b번 장대로 옮기기
    if n == 1:  # 원판이 한 개면
        print(a, b)
        return
    c = 6 - a - b  # 1,2,3번 장대 중 a와 b가 아닌 것을 이런 식으로 구할 수도 있다.
    hanoi(n - 1, a, c)
    hanoi(1, a, b)
    hanoi(n - 1, c, b)


N = int(input())
print((1 << N) - 1)  # 몇 번 옮기는지 일반항을 알 수 있으면 이렇게 해도 된다.
# 그렇지 않으면, ans 리스트를 만들어두고 hanoi 함수에서 n==1일 때 리스트에 a,b를 넣어주면 된다.
hanoi(N, 1, 3)
